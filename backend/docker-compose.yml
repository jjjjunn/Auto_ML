version: '3.8'

services:
  # Redis service for Celery broker and result backend
  redis:
    image: redis:7-alpine
    container_name: auto_ml_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    
  # Celery worker service
  celery-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: auto_ml_celery_worker
    command: celery -A tasks worker --loglevel=info --pool=solo
    volumes:
      - .:/app
      - uploads:/app/uploads
      - models:/app/models
      - vectordb:/app/vectordb
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./automl.db
    depends_on:
      - redis
    restart: unless-stopped

  # Celery beat service (for scheduled tasks if needed)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auto_ml_celery_beat
    command: celery -A tasks beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./automl.db
    depends_on:
      - redis
    restart: unless-stopped

  # Flower service (Celery monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auto_ml_flower
    command: celery -A tasks flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data:
  uploads:
  models:
  vectordb: