2025-08-19 16:24:32,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:24:32,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:24:32,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:24:32,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:38:57,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:38:57,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:38:57,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:38:57,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:42:44,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:42:44,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:42:44,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:42:44,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:20,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:20,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:20,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:20,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:30,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:30,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:30,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 16:49:30,595:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:49:33,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:49:33,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:49:33,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:49:33,681:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:00:31,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:00:31,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:00:31,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:00:31,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:01:44,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:01:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:01:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:01:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:59:56,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:59:56,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:59:56,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 19:59:56,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:00:38,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:00:38,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:00:38,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:00:38,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:02:48,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:02:48,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:02:48,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:02:48,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:02:52,720:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:1: LangChainDeprecationWarning: Importing OpenAIEmbeddings from langchain.embeddings is deprecated. Please replace deprecated imports:

>> from langchain.embeddings import OpenAIEmbeddings

with new imports of:

>> from langchain_community.embeddings import OpenAIEmbeddings
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.embeddings import OpenAIEmbeddings

2025-08-19 20:02:52,828:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:2: LangChainDeprecationWarning: Importing FAISS from langchain.vectorstores is deprecated. Please replace deprecated imports:

>> from langchain.vectorstores import FAISS

with new imports of:

>> from langchain_community.vectorstores import FAISS
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.vectorstores import FAISS

2025-08-19 20:02:54,333:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:02:54,536:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:02:55,555:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:9: LangChainDeprecationWarning: The class `OpenAIEmbeddings` was deprecated in LangChain 0.0.9 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import OpenAIEmbeddings``.
  EMB_MODEL = OpenAIEmbeddings()

2025-08-19 20:02:59,394:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:10: LangChainDeprecationWarning: The class `ChatOpenAI` was deprecated in LangChain 0.0.10 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import ChatOpenAI``.
  LLM = ChatOpenAI(temperature=0)

2025-08-19 20:05:24,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:05:24,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:05:24,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:05:24,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:05:27,045:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:1: LangChainDeprecationWarning: Importing OpenAIEmbeddings from langchain.embeddings is deprecated. Please replace deprecated imports:

>> from langchain.embeddings import OpenAIEmbeddings

with new imports of:

>> from langchain_community.embeddings import OpenAIEmbeddings
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.embeddings import OpenAIEmbeddings

2025-08-19 20:05:27,066:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:2: LangChainDeprecationWarning: Importing FAISS from langchain.vectorstores is deprecated. Please replace deprecated imports:

>> from langchain.vectorstores import FAISS

with new imports of:

>> from langchain_community.vectorstores import FAISS
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.vectorstores import FAISS

2025-08-19 20:05:27,402:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:05:27,459:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:05:27,767:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:9: LangChainDeprecationWarning: The class `OpenAIEmbeddings` was deprecated in LangChain 0.0.9 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import OpenAIEmbeddings``.
  EMB_MODEL = OpenAIEmbeddings()

2025-08-19 20:05:30,792:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:10: LangChainDeprecationWarning: The class `ChatOpenAI` was deprecated in LangChain 0.0.10 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import ChatOpenAI``.
  LLM = ChatOpenAI(temperature=0)

2025-08-19 20:06:04,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:06:04,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:06:04,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:06:04,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 20:06:06,514:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:1: LangChainDeprecationWarning: Importing OpenAIEmbeddings from langchain.embeddings is deprecated. Please replace deprecated imports:

>> from langchain.embeddings import OpenAIEmbeddings

with new imports of:

>> from langchain_community.embeddings import OpenAIEmbeddings
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.embeddings import OpenAIEmbeddings

2025-08-19 20:06:06,540:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:2: LangChainDeprecationWarning: Importing FAISS from langchain.vectorstores is deprecated. Please replace deprecated imports:

>> from langchain.vectorstores import FAISS

with new imports of:

>> from langchain_community.vectorstores import FAISS
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.vectorstores import FAISS

2025-08-19 20:06:06,897:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:06:06,945:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:3: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import ChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  from langchain.chat_models import ChatOpenAI

2025-08-19 20:06:07,149:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:9: LangChainDeprecationWarning: The class `OpenAIEmbeddings` was deprecated in LangChain 0.0.9 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import OpenAIEmbeddings``.
  EMB_MODEL = OpenAIEmbeddings()

2025-08-19 20:06:09,847:WARNING:D:\Programming\My_works\Auto_ML\backend\services\rag_utils.py:10: LangChainDeprecationWarning: The class `ChatOpenAI` was deprecated in LangChain 0.0.10 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import ChatOpenAI``.
  LLM = ChatOpenAI(temperature=0)

2025-08-19 20:06:11,153:INFO:PyCaret ClassificationExperiment
2025-08-19 20:06:11,153:INFO:Logging name: clf-default-name
2025-08-19 20:06:11,153:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 20:06:11,153:INFO:version 3.3.2
2025-08-19 20:06:11,153:INFO:Initializing setup()
2025-08-19 20:06:11,153:INFO:self.USI: 331c
2025-08-19 20:06:11,153:INFO:self._variable_keys: {'exp_id', 'gpu_n_jobs_param', 'y_test', 'pipeline', 'y_train', 'fix_imbalance', 'data', 'X', '_available_plots', 'logging_param', 'html_param', 'exp_name_log', '_ml_usecase', 'X_test', 'target_param', 'n_jobs_param', 'log_plots_param', 'fold_groups_param', 'idx', 'gpu_param', 'is_multiclass', 'fold_generator', 'USI', 'seed', 'memory', 'X_train', 'y', 'fold_shuffle_param'}
2025-08-19 20:06:11,153:INFO:Checking environment
2025-08-19 20:06:11,154:INFO:python_version: 3.9.23
2025-08-19 20:06:11,154:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-19 20:06:11,154:INFO:machine: AMD64
2025-08-19 20:06:11,182:INFO:platform: Windows-10-10.0.26100-SP0
2025-08-19 20:06:11,186:INFO:Memory: svmem(total=17015848960, available=2183372800, percent=87.2, used=14832476160, free=2183372800)
2025-08-19 20:06:11,186:INFO:Physical Core: 6
2025-08-19 20:06:11,187:INFO:Logical Core: 12
2025-08-19 20:06:11,187:INFO:Checking libraries
2025-08-19 20:06:11,187:INFO:System:
2025-08-19 20:06:11,187:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-19 20:06:11,187:INFO:executable: D:\Programming\My_works\conda_env\auto_ml\python.exe
2025-08-19 20:06:11,187:INFO:   machine: Windows-10-10.0.26100-SP0
2025-08-19 20:06:11,187:INFO:PyCaret required dependencies:
2025-08-19 20:06:11,382:INFO:                 pip: 25.1
2025-08-19 20:06:11,382:INFO:          setuptools: 78.1.1
2025-08-19 20:06:11,383:INFO:             pycaret: 3.3.2
2025-08-19 20:06:11,383:INFO:             IPython: 8.18.1
2025-08-19 20:06:11,383:INFO:          ipywidgets: 8.1.7
2025-08-19 20:06:11,383:INFO:                tqdm: 4.67.1
2025-08-19 20:06:11,383:INFO:               numpy: 1.26.4
2025-08-19 20:06:11,383:INFO:              pandas: 2.1.4
2025-08-19 20:06:11,383:INFO:              jinja2: 3.1.6
2025-08-19 20:06:11,383:INFO:               scipy: 1.11.4
2025-08-19 20:06:11,383:INFO:              joblib: 1.3.2
2025-08-19 20:06:11,383:INFO:             sklearn: 1.4.2
2025-08-19 20:06:11,383:INFO:                pyod: 2.0.5
2025-08-19 20:06:11,384:INFO:            imblearn: 0.12.4
2025-08-19 20:06:11,384:INFO:   category_encoders: 2.6.4
2025-08-19 20:06:11,384:INFO:            lightgbm: 4.6.0
2025-08-19 20:06:11,384:INFO:               numba: 0.60.0
2025-08-19 20:06:11,384:INFO:            requests: 2.32.5
2025-08-19 20:06:11,384:INFO:          matplotlib: 3.7.5
2025-08-19 20:06:11,384:INFO:          scikitplot: 0.3.7
2025-08-19 20:06:11,384:INFO:         yellowbrick: 1.5
2025-08-19 20:06:11,384:INFO:              plotly: 5.24.1
2025-08-19 20:06:11,384:INFO:    plotly-resampler: Not installed
2025-08-19 20:06:11,384:INFO:             kaleido: 1.0.0
2025-08-19 20:06:11,384:INFO:           schemdraw: 0.15
2025-08-19 20:06:11,384:INFO:         statsmodels: 0.14.5
2025-08-19 20:06:11,384:INFO:              sktime: 0.26.0
2025-08-19 20:06:11,384:INFO:               tbats: 1.1.3
2025-08-19 20:06:11,384:INFO:            pmdarima: 2.0.4
2025-08-19 20:06:11,384:INFO:              psutil: 6.1.0
2025-08-19 20:06:11,384:INFO:          markupsafe: 3.0.2
2025-08-19 20:06:11,384:INFO:             pickle5: Not installed
2025-08-19 20:06:11,384:INFO:         cloudpickle: 3.1.1
2025-08-19 20:06:11,384:INFO:         deprecation: 2.1.0
2025-08-19 20:06:11,384:INFO:              xxhash: 3.5.0
2025-08-19 20:06:11,385:INFO:           wurlitzer: Not installed
2025-08-19 20:06:11,385:INFO:PyCaret optional dependencies:
2025-08-19 20:06:11,409:INFO:                shap: Not installed
2025-08-19 20:06:11,409:INFO:           interpret: Not installed
2025-08-19 20:06:11,409:INFO:                umap: Not installed
2025-08-19 20:06:11,409:INFO:     ydata_profiling: Not installed
2025-08-19 20:06:11,409:INFO:  explainerdashboard: Not installed
2025-08-19 20:06:11,409:INFO:             autoviz: Not installed
2025-08-19 20:06:11,409:INFO:           fairlearn: Not installed
2025-08-19 20:06:11,409:INFO:          deepchecks: Not installed
2025-08-19 20:06:11,409:INFO:             xgboost: Not installed
2025-08-19 20:06:11,409:INFO:            catboost: Not installed
2025-08-19 20:06:11,409:INFO:              kmodes: Not installed
2025-08-19 20:06:11,409:INFO:             mlxtend: Not installed
2025-08-19 20:06:11,409:INFO:       statsforecast: Not installed
2025-08-19 20:06:11,409:INFO:        tune_sklearn: Not installed
2025-08-19 20:06:11,409:INFO:                 ray: Not installed
2025-08-19 20:06:11,409:INFO:            hyperopt: Not installed
2025-08-19 20:06:11,409:INFO:              optuna: Not installed
2025-08-19 20:06:11,409:INFO:               skopt: Not installed
2025-08-19 20:06:11,409:INFO:              mlflow: Not installed
2025-08-19 20:06:11,409:INFO:              gradio: Not installed
2025-08-19 20:06:11,410:INFO:             fastapi: 0.116.1
2025-08-19 20:06:11,410:INFO:             uvicorn: 0.35.0
2025-08-19 20:06:11,410:INFO:              m2cgen: Not installed
2025-08-19 20:06:11,410:INFO:           evidently: Not installed
2025-08-19 20:06:11,410:INFO:               fugue: Not installed
2025-08-19 20:06:11,410:INFO:           streamlit: 1.48.1
2025-08-19 20:06:11,410:INFO:             prophet: Not installed
2025-08-19 20:06:11,410:INFO:None
2025-08-19 20:06:11,410:INFO:Set up data.
2025-08-19 20:06:11,446:INFO:Set up folding strategy.
2025-08-19 20:06:11,447:INFO:Set up train/test split.
2025-08-19 20:06:11,544:INFO:Set up index.
2025-08-19 20:06:11,545:INFO:Assigning column types.
2025-08-19 20:06:11,554:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 20:06:11,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,714:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 20:06:11,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:06:11,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,888:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 20:06:11,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:11,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:12,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:12,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:12,037:INFO:Preparing preprocessing pipeline...
2025-08-19 20:06:12,039:INFO:Set up label encoding.
2025-08-19 20:06:12,039:INFO:Set up simple imputation.
2025-08-19 20:06:12,046:INFO:Set up encoding of ordinal features.
2025-08-19 20:06:12,049:INFO:Set up encoding of categorical features.
2025-08-19 20:06:12,453:INFO:Finished creating preprocessing pipeline.
2025-08-19 20:06:12,488:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Public\Documents\ESTsoft\CreatorTemp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Year', 'Engine_Size_L',
                                             'Mileage_KM', 'Price_USD',
                                             'Sales_Volume'],
                                    transformer=SimpleImpute...
Manual       1
NaN         -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Model', 'Region', 'Color',
                                             'Fuel_Type'],
                                    transformer=OneHotEncoder(cols=['Model',
                                                                    'Region',
                                                                    'Color',
                                                                    'Fuel_Type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 20:06:12,488:INFO:Creating final display dataframe.
2025-08-19 20:06:13,334:INFO:Setup _display_container:                     Description                 Value
0                    Session id                    42
1                        Target  Sales_Classification
2                   Target type                Binary
3                Target mapping       High: 0, Low: 1
4           Original data shape           (50000, 11)
5        Transformed data shape           (50000, 34)
6   Transformed train set shape           (35000, 34)
7    Transformed test set shape           (15000, 34)
8              Numeric features                     5
9          Categorical features                     5
10                   Preprocess                  True
11              Imputation type                simple
12           Numeric imputation                  mean
13       Categorical imputation                  mode
14     Maximum one-hot encoding                    25
15              Encoding method                  None
16               Fold Generator       StratifiedKFold
17                  Fold Number                    10
18                     CPU Jobs                    -1
19                      Use GPU                 False
20               Log Experiment                 False
21              Experiment Name      clf-default-name
22                          USI                  331c
2025-08-19 20:06:13,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:13,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:13,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:13,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:06:13,521:INFO:setup() successfully completed in 2.38s...............
2025-08-19 20:06:13,521:INFO:Initializing compare_models()
2025-08-19 20:06:13,521:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 20:06:13,521:INFO:Checking exceptions
2025-08-19 20:06:13,530:INFO:Preparing display monitor
2025-08-19 20:06:13,534:INFO:Initializing Logistic Regression
2025-08-19 20:06:13,534:INFO:Total runtime is 9.632110595703125e-06 minutes
2025-08-19 20:06:13,534:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:13,534:INFO:Initializing create_model()
2025-08-19 20:06:13,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:13,535:INFO:Checking exceptions
2025-08-19 20:06:13,535:INFO:Importing libraries
2025-08-19 20:06:13,535:INFO:Copying training dataset
2025-08-19 20:06:13,551:INFO:Defining folds
2025-08-19 20:06:13,551:INFO:Declaring metric variables
2025-08-19 20:06:13,552:INFO:Importing untrained model
2025-08-19 20:06:13,552:INFO:Logistic Regression Imported successfully
2025-08-19 20:06:13,553:INFO:Starting cross validation
2025-08-19 20:06:13,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:25,436:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,444:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,460:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,502:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,575:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,621:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,629:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,625:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,647:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,674:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,710:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,720:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,745:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,758:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,770:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,772:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,779:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,788:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,804:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,810:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,826:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,855:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,860:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,865:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,880:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:25,902:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:26,000:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:26,096:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:26,149:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:26,209:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:26,302:INFO:Calculating mean and std
2025-08-19 20:06:26,304:INFO:Creating metrics dataframe
2025-08-19 20:06:26,312:INFO:Uploading results into container
2025-08-19 20:06:26,313:INFO:Uploading model into container now
2025-08-19 20:06:26,315:INFO:_master_model_container: 1
2025-08-19 20:06:26,315:INFO:_display_container: 2
2025-08-19 20:06:26,316:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 20:06:26,317:INFO:create_model() successfully completed......................................
2025-08-19 20:06:26,570:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:26,570:INFO:Creating metrics dataframe
2025-08-19 20:06:26,577:INFO:Initializing K Neighbors Classifier
2025-08-19 20:06:26,577:INFO:Total runtime is 0.21739383141199747 minutes
2025-08-19 20:06:26,578:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:26,579:INFO:Initializing create_model()
2025-08-19 20:06:26,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:26,579:INFO:Checking exceptions
2025-08-19 20:06:26,579:INFO:Importing libraries
2025-08-19 20:06:26,579:INFO:Copying training dataset
2025-08-19 20:06:26,626:INFO:Defining folds
2025-08-19 20:06:26,627:INFO:Declaring metric variables
2025-08-19 20:06:26,628:INFO:Importing untrained model
2025-08-19 20:06:26,629:INFO:K Neighbors Classifier Imported successfully
2025-08-19 20:06:26,631:INFO:Starting cross validation
2025-08-19 20:06:26,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:33,714:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,783:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,814:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,825:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,873:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,895:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,897:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,904:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,938:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,962:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,970:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,977:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,987:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,995:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:33,999:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,042:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,047:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,065:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,077:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,113:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,129:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,138:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:34,174:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,186:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,220:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,235:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,253:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,270:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,303:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:38,371:INFO:Calculating mean and std
2025-08-19 20:06:38,372:INFO:Creating metrics dataframe
2025-08-19 20:06:38,375:INFO:Uploading results into container
2025-08-19 20:06:38,376:INFO:Uploading model into container now
2025-08-19 20:06:38,377:INFO:_master_model_container: 2
2025-08-19 20:06:38,377:INFO:_display_container: 2
2025-08-19 20:06:38,377:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 20:06:38,377:INFO:create_model() successfully completed......................................
2025-08-19 20:06:38,532:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:38,532:INFO:Creating metrics dataframe
2025-08-19 20:06:38,538:INFO:Initializing Naive Bayes
2025-08-19 20:06:38,538:INFO:Total runtime is 0.4167399247487386 minutes
2025-08-19 20:06:38,539:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:38,539:INFO:Initializing create_model()
2025-08-19 20:06:38,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:38,540:INFO:Checking exceptions
2025-08-19 20:06:38,540:INFO:Importing libraries
2025-08-19 20:06:38,540:INFO:Copying training dataset
2025-08-19 20:06:38,571:INFO:Defining folds
2025-08-19 20:06:38,571:INFO:Declaring metric variables
2025-08-19 20:06:38,571:INFO:Importing untrained model
2025-08-19 20:06:38,572:INFO:Naive Bayes Imported successfully
2025-08-19 20:06:38,573:INFO:Starting cross validation
2025-08-19 20:06:38,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:39,895:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:39,950:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,009:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,031:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,109:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,146:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,203:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,260:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,269:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,359:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,433:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,509:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,617:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,630:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,681:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,688:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,745:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,752:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,752:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,777:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,799:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,830:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,845:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,870:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,892:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,895:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,929:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,932:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:40,953:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:41,013:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:41,106:INFO:Calculating mean and std
2025-08-19 20:06:41,108:INFO:Creating metrics dataframe
2025-08-19 20:06:41,114:INFO:Uploading results into container
2025-08-19 20:06:41,116:INFO:Uploading model into container now
2025-08-19 20:06:41,117:INFO:_master_model_container: 3
2025-08-19 20:06:41,117:INFO:_display_container: 2
2025-08-19 20:06:41,117:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 20:06:41,118:INFO:create_model() successfully completed......................................
2025-08-19 20:06:41,341:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:41,341:INFO:Creating metrics dataframe
2025-08-19 20:06:41,348:INFO:Initializing Decision Tree Classifier
2025-08-19 20:06:41,349:INFO:Total runtime is 0.4635854681332906 minutes
2025-08-19 20:06:41,349:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:41,350:INFO:Initializing create_model()
2025-08-19 20:06:41,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:41,350:INFO:Checking exceptions
2025-08-19 20:06:41,351:INFO:Importing libraries
2025-08-19 20:06:41,351:INFO:Copying training dataset
2025-08-19 20:06:41,389:INFO:Defining folds
2025-08-19 20:06:41,389:INFO:Declaring metric variables
2025-08-19 20:06:41,390:INFO:Importing untrained model
2025-08-19 20:06:41,391:INFO:Decision Tree Classifier Imported successfully
2025-08-19 20:06:41,391:INFO:Starting cross validation
2025-08-19 20:06:41,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:42,752:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,809:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,863:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,884:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,887:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,888:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,893:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,895:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,899:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,938:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,942:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,944:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,947:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,950:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,951:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,957:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,996:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:42,998:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,002:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,005:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,008:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,011:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,016:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,026:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,052:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,083:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,084:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,127:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,130:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,177:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:43,256:INFO:Calculating mean and std
2025-08-19 20:06:43,259:INFO:Creating metrics dataframe
2025-08-19 20:06:43,265:INFO:Uploading results into container
2025-08-19 20:06:43,267:INFO:Uploading model into container now
2025-08-19 20:06:43,268:INFO:_master_model_container: 4
2025-08-19 20:06:43,268:INFO:_display_container: 2
2025-08-19 20:06:43,269:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:06:43,269:INFO:create_model() successfully completed......................................
2025-08-19 20:06:43,440:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:43,440:INFO:Creating metrics dataframe
2025-08-19 20:06:43,447:INFO:Initializing SVM - Linear Kernel
2025-08-19 20:06:43,447:INFO:Total runtime is 0.498562486966451 minutes
2025-08-19 20:06:43,448:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:43,449:INFO:Initializing create_model()
2025-08-19 20:06:43,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:43,449:INFO:Checking exceptions
2025-08-19 20:06:43,449:INFO:Importing libraries
2025-08-19 20:06:43,449:INFO:Copying training dataset
2025-08-19 20:06:43,482:INFO:Defining folds
2025-08-19 20:06:43,482:INFO:Declaring metric variables
2025-08-19 20:06:43,483:INFO:Importing untrained model
2025-08-19 20:06:43,484:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 20:06:43,485:INFO:Starting cross validation
2025-08-19 20:06:43,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:46,407:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,417:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,456:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,510:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,514:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,528:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,582:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,608:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,657:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,677:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,708:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,736:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,772:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,794:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,836:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,891:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,948:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:46,950:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,000:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,005:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,054:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,094:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,141:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,188:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,504:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,527:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,554:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,570:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,601:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,617:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:47,680:INFO:Calculating mean and std
2025-08-19 20:06:47,681:INFO:Creating metrics dataframe
2025-08-19 20:06:47,684:INFO:Uploading results into container
2025-08-19 20:06:47,685:INFO:Uploading model into container now
2025-08-19 20:06:47,686:INFO:_master_model_container: 5
2025-08-19 20:06:47,687:INFO:_display_container: 2
2025-08-19 20:06:47,687:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 20:06:47,688:INFO:create_model() successfully completed......................................
2025-08-19 20:06:47,800:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:47,800:INFO:Creating metrics dataframe
2025-08-19 20:06:47,805:INFO:Initializing Ridge Classifier
2025-08-19 20:06:47,805:INFO:Total runtime is 0.5711913744608561 minutes
2025-08-19 20:06:47,805:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:47,806:INFO:Initializing create_model()
2025-08-19 20:06:47,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:47,806:INFO:Checking exceptions
2025-08-19 20:06:47,806:INFO:Importing libraries
2025-08-19 20:06:47,806:INFO:Copying training dataset
2025-08-19 20:06:47,830:INFO:Defining folds
2025-08-19 20:06:47,830:INFO:Declaring metric variables
2025-08-19 20:06:47,831:INFO:Importing untrained model
2025-08-19 20:06:47,831:INFO:Ridge Classifier Imported successfully
2025-08-19 20:06:47,832:INFO:Starting cross validation
2025-08-19 20:06:47,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:49,220:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,222:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,223:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,230:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,236:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,239:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,243:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,243:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,244:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,273:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,276:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,297:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,297:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,298:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,299:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,300:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,303:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,316:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,316:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,330:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,335:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,355:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,356:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,360:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,369:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,379:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,381:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:49,465:INFO:Calculating mean and std
2025-08-19 20:06:49,466:INFO:Creating metrics dataframe
2025-08-19 20:06:49,470:INFO:Uploading results into container
2025-08-19 20:06:49,471:INFO:Uploading model into container now
2025-08-19 20:06:49,472:INFO:_master_model_container: 6
2025-08-19 20:06:49,472:INFO:_display_container: 2
2025-08-19 20:06:49,472:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-19 20:06:49,472:INFO:create_model() successfully completed......................................
2025-08-19 20:06:49,579:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:49,579:INFO:Creating metrics dataframe
2025-08-19 20:06:49,582:INFO:Initializing Random Forest Classifier
2025-08-19 20:06:49,582:INFO:Total runtime is 0.6007993896802266 minutes
2025-08-19 20:06:49,582:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:49,582:INFO:Initializing create_model()
2025-08-19 20:06:49,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:49,582:INFO:Checking exceptions
2025-08-19 20:06:49,583:INFO:Importing libraries
2025-08-19 20:06:49,583:INFO:Copying training dataset
2025-08-19 20:06:49,598:INFO:Defining folds
2025-08-19 20:06:49,598:INFO:Declaring metric variables
2025-08-19 20:06:49,598:INFO:Importing untrained model
2025-08-19 20:06:49,599:INFO:Random Forest Classifier Imported successfully
2025-08-19 20:06:49,599:INFO:Starting cross validation
2025-08-19 20:06:49,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:55,802:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,824:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,826:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,899:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,928:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,949:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,955:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,958:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,982:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,998:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:55,999:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,003:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,011:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,022:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,025:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,026:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,034:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,059:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,061:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,062:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,084:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,089:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,107:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,121:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,127:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,141:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,146:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,174:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,200:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:56,267:INFO:Calculating mean and std
2025-08-19 20:06:56,268:INFO:Creating metrics dataframe
2025-08-19 20:06:56,271:INFO:Uploading results into container
2025-08-19 20:06:56,272:INFO:Uploading model into container now
2025-08-19 20:06:56,273:INFO:_master_model_container: 7
2025-08-19 20:06:56,273:INFO:_display_container: 2
2025-08-19 20:06:56,273:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-19 20:06:56,274:INFO:create_model() successfully completed......................................
2025-08-19 20:06:56,414:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:56,414:INFO:Creating metrics dataframe
2025-08-19 20:06:56,419:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 20:06:56,419:INFO:Total runtime is 0.7147518952687582 minutes
2025-08-19 20:06:56,420:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:56,420:INFO:Initializing create_model()
2025-08-19 20:06:56,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:56,420:INFO:Checking exceptions
2025-08-19 20:06:56,420:INFO:Importing libraries
2025-08-19 20:06:56,420:INFO:Copying training dataset
2025-08-19 20:06:56,441:INFO:Defining folds
2025-08-19 20:06:56,442:INFO:Declaring metric variables
2025-08-19 20:06:56,442:INFO:Importing untrained model
2025-08-19 20:06:56,443:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 20:06:56,443:INFO:Starting cross validation
2025-08-19 20:06:56,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:57,794:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,794:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:57,796:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:06:58,334:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,341:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,360:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,361:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,380:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,385:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,389:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,405:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,405:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,406:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,408:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,411:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,412:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,413:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,465:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,471:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,472:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,473:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,488:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,491:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,492:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,512:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,514:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,531:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,548:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,566:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,588:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:06:58,651:INFO:Calculating mean and std
2025-08-19 20:06:58,652:INFO:Creating metrics dataframe
2025-08-19 20:06:58,655:INFO:Uploading results into container
2025-08-19 20:06:58,655:INFO:Uploading model into container now
2025-08-19 20:06:58,656:INFO:_master_model_container: 8
2025-08-19 20:06:58,656:INFO:_display_container: 2
2025-08-19 20:06:58,656:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 20:06:58,657:INFO:create_model() successfully completed......................................
2025-08-19 20:06:58,753:INFO:SubProcess create_model() end ==================================
2025-08-19 20:06:58,753:INFO:Creating metrics dataframe
2025-08-19 20:06:58,758:INFO:Initializing Ada Boost Classifier
2025-08-19 20:06:58,758:INFO:Total runtime is 0.7537301143010458 minutes
2025-08-19 20:06:58,758:INFO:SubProcess create_model() called ==================================
2025-08-19 20:06:58,758:INFO:Initializing create_model()
2025-08-19 20:06:58,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:06:58,759:INFO:Checking exceptions
2025-08-19 20:06:58,759:INFO:Importing libraries
2025-08-19 20:06:58,759:INFO:Copying training dataset
2025-08-19 20:06:58,781:INFO:Defining folds
2025-08-19 20:06:58,781:INFO:Declaring metric variables
2025-08-19 20:06:58,781:INFO:Importing untrained model
2025-08-19 20:06:58,781:INFO:Ada Boost Classifier Imported successfully
2025-08-19 20:06:58,782:INFO:Starting cross validation
2025-08-19 20:06:58,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:06:59,773:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,775:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,775:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,792:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,810:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,864:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,893:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,897:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,907:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:06:59,922:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:07:00,047:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,051:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,057:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,069:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,070:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,103:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,112:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,117:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,126:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,135:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,139:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,146:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,154:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,158:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,177:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,193:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,206:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,211:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,248:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,253:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,260:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,270:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,277:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,278:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,280:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,287:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,310:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,319:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,340:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,343:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:00,425:INFO:Calculating mean and std
2025-08-19 20:07:00,426:INFO:Creating metrics dataframe
2025-08-19 20:07:00,430:INFO:Uploading results into container
2025-08-19 20:07:00,431:INFO:Uploading model into container now
2025-08-19 20:07:00,432:INFO:_master_model_container: 9
2025-08-19 20:07:00,432:INFO:_display_container: 2
2025-08-19 20:07:00,432:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-19 20:07:00,433:INFO:create_model() successfully completed......................................
2025-08-19 20:07:00,556:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:00,557:INFO:Creating metrics dataframe
2025-08-19 20:07:00,562:INFO:Initializing Gradient Boosting Classifier
2025-08-19 20:07:00,562:INFO:Total runtime is 0.7838109691937765 minutes
2025-08-19 20:07:00,562:INFO:SubProcess create_model() called ==================================
2025-08-19 20:07:00,563:INFO:Initializing create_model()
2025-08-19 20:07:00,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:00,563:INFO:Checking exceptions
2025-08-19 20:07:00,563:INFO:Importing libraries
2025-08-19 20:07:00,563:INFO:Copying training dataset
2025-08-19 20:07:00,585:INFO:Defining folds
2025-08-19 20:07:00,585:INFO:Declaring metric variables
2025-08-19 20:07:00,586:INFO:Importing untrained model
2025-08-19 20:07:00,587:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 20:07:00,587:INFO:Starting cross validation
2025-08-19 20:07:00,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:07:08,903:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:08,961:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:08,969:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,038:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,076:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,108:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,131:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,143:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,149:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,209:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,212:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,214:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,255:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,269:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,270:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,271:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,311:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,347:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,372:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,376:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,393:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,393:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,421:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,436:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,439:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,470:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,483:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,511:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,545:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,583:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:09,645:INFO:Calculating mean and std
2025-08-19 20:07:09,646:INFO:Creating metrics dataframe
2025-08-19 20:07:09,650:INFO:Uploading results into container
2025-08-19 20:07:09,652:INFO:Uploading model into container now
2025-08-19 20:07:09,652:INFO:_master_model_container: 10
2025-08-19 20:07:09,653:INFO:_display_container: 2
2025-08-19 20:07:09,653:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 20:07:09,653:INFO:create_model() successfully completed......................................
2025-08-19 20:07:09,786:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:09,786:INFO:Creating metrics dataframe
2025-08-19 20:07:09,791:INFO:Initializing Linear Discriminant Analysis
2025-08-19 20:07:09,791:INFO:Total runtime is 0.9376131772994996 minutes
2025-08-19 20:07:09,791:INFO:SubProcess create_model() called ==================================
2025-08-19 20:07:09,792:INFO:Initializing create_model()
2025-08-19 20:07:09,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:09,792:INFO:Checking exceptions
2025-08-19 20:07:09,792:INFO:Importing libraries
2025-08-19 20:07:09,792:INFO:Copying training dataset
2025-08-19 20:07:09,817:INFO:Defining folds
2025-08-19 20:07:09,817:INFO:Declaring metric variables
2025-08-19 20:07:09,817:INFO:Importing untrained model
2025-08-19 20:07:09,817:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 20:07:09,818:INFO:Starting cross validation
2025-08-19 20:07:09,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:07:11,567:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,569:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,579:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,580:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,580:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,586:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,592:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,593:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,596:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,611:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,616:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,618:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,629:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,631:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,632:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,648:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,664:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,669:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,677:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,676:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,678:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,682:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,682:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,688:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,706:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,711:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,728:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,733:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,745:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:11,829:INFO:Calculating mean and std
2025-08-19 20:07:11,831:INFO:Creating metrics dataframe
2025-08-19 20:07:11,835:INFO:Uploading results into container
2025-08-19 20:07:11,836:INFO:Uploading model into container now
2025-08-19 20:07:11,837:INFO:_master_model_container: 11
2025-08-19 20:07:11,837:INFO:_display_container: 2
2025-08-19 20:07:11,837:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 20:07:11,838:INFO:create_model() successfully completed......................................
2025-08-19 20:07:11,987:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:11,987:INFO:Creating metrics dataframe
2025-08-19 20:07:11,992:INFO:Initializing Extra Trees Classifier
2025-08-19 20:07:11,992:INFO:Total runtime is 0.9743043104807536 minutes
2025-08-19 20:07:11,993:INFO:SubProcess create_model() called ==================================
2025-08-19 20:07:11,993:INFO:Initializing create_model()
2025-08-19 20:07:11,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:11,993:INFO:Checking exceptions
2025-08-19 20:07:11,993:INFO:Importing libraries
2025-08-19 20:07:11,993:INFO:Copying training dataset
2025-08-19 20:07:12,012:INFO:Defining folds
2025-08-19 20:07:12,012:INFO:Declaring metric variables
2025-08-19 20:07:12,013:INFO:Importing untrained model
2025-08-19 20:07:12,014:INFO:Extra Trees Classifier Imported successfully
2025-08-19 20:07:12,015:INFO:Starting cross validation
2025-08-19 20:07:12,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:07:19,900:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:19,972:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:19,989:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,010:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,019:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,032:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,074:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,078:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,080:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,092:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,113:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,115:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,116:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,143:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,148:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,150:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,159:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,165:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,170:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,185:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,186:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,212:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,213:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,258:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,265:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,266:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,273:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,280:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,329:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,388:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:20,456:INFO:Calculating mean and std
2025-08-19 20:07:20,458:INFO:Creating metrics dataframe
2025-08-19 20:07:20,462:INFO:Uploading results into container
2025-08-19 20:07:20,463:INFO:Uploading model into container now
2025-08-19 20:07:20,463:INFO:_master_model_container: 12
2025-08-19 20:07:20,463:INFO:_display_container: 2
2025-08-19 20:07:20,464:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-19 20:07:20,465:INFO:create_model() successfully completed......................................
2025-08-19 20:07:20,597:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:20,597:INFO:Creating metrics dataframe
2025-08-19 20:07:20,602:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 20:07:20,602:INFO:Total runtime is 1.1177994052569071 minutes
2025-08-19 20:07:20,602:INFO:SubProcess create_model() called ==================================
2025-08-19 20:07:20,602:INFO:Initializing create_model()
2025-08-19 20:07:20,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:20,603:INFO:Checking exceptions
2025-08-19 20:07:20,603:INFO:Importing libraries
2025-08-19 20:07:20,603:INFO:Copying training dataset
2025-08-19 20:07:20,631:INFO:Defining folds
2025-08-19 20:07:20,632:INFO:Declaring metric variables
2025-08-19 20:07:20,632:INFO:Importing untrained model
2025-08-19 20:07:20,633:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 20:07:20,634:INFO:Starting cross validation
2025-08-19 20:07:20,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:07:22,803:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:22,818:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:22,868:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:22,881:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:22,929:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:22,941:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,260:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,342:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,342:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,394:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,409:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,409:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,461:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,471:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,481:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,530:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,543:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,617:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,632:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,686:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,691:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,744:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,756:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,801:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,861:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,887:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,935:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,940:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:23,992:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:24,046:INFO:Calculating mean and std
2025-08-19 20:07:24,047:INFO:Creating metrics dataframe
2025-08-19 20:07:24,050:INFO:Uploading results into container
2025-08-19 20:07:24,052:INFO:Uploading model into container now
2025-08-19 20:07:24,053:INFO:_master_model_container: 13
2025-08-19 20:07:24,053:INFO:_display_container: 2
2025-08-19 20:07:24,054:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 20:07:24,054:INFO:create_model() successfully completed......................................
2025-08-19 20:07:24,175:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:24,175:INFO:Creating metrics dataframe
2025-08-19 20:07:24,180:INFO:Initializing Dummy Classifier
2025-08-19 20:07:24,181:INFO:Total runtime is 1.177447509765625 minutes
2025-08-19 20:07:24,181:INFO:SubProcess create_model() called ==================================
2025-08-19 20:07:24,181:INFO:Initializing create_model()
2025-08-19 20:07:24,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA04E52E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:24,182:INFO:Checking exceptions
2025-08-19 20:07:24,182:INFO:Importing libraries
2025-08-19 20:07:24,182:INFO:Copying training dataset
2025-08-19 20:07:24,203:INFO:Defining folds
2025-08-19 20:07:24,203:INFO:Declaring metric variables
2025-08-19 20:07:24,203:INFO:Importing untrained model
2025-08-19 20:07:24,204:INFO:Dummy Classifier Imported successfully
2025-08-19 20:07:24,205:INFO:Starting cross validation
2025-08-19 20:07:24,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:07:25,261:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,273:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,278:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,282:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,310:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,313:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,320:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,324:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,332:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,337:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,341:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,348:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,353:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,355:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,359:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,368:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,370:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,372:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,378:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,382:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,383:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,393:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,396:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,405:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,406:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,406:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,414:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,421:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,422:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,424:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,429:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,432:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,451:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,451:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,461:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,463:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:07:25,477:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,495:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,497:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:07:25,586:INFO:Calculating mean and std
2025-08-19 20:07:25,587:INFO:Creating metrics dataframe
2025-08-19 20:07:25,592:INFO:Uploading results into container
2025-08-19 20:07:25,592:INFO:Uploading model into container now
2025-08-19 20:07:25,593:INFO:_master_model_container: 14
2025-08-19 20:07:25,594:INFO:_display_container: 2
2025-08-19 20:07:25,594:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-19 20:07:25,594:INFO:create_model() successfully completed......................................
2025-08-19 20:07:25,727:INFO:SubProcess create_model() end ==================================
2025-08-19 20:07:25,727:INFO:Creating metrics dataframe
2025-08-19 20:07:25,756:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 20:07:25,758:INFO:Initializing create_model()
2025-08-19 20:07:25,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0212CA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:07:25,758:INFO:Checking exceptions
2025-08-19 20:07:25,760:INFO:Importing libraries
2025-08-19 20:07:25,760:INFO:Copying training dataset
2025-08-19 20:07:25,784:INFO:Defining folds
2025-08-19 20:07:25,784:INFO:Declaring metric variables
2025-08-19 20:07:25,785:INFO:Importing untrained model
2025-08-19 20:07:25,785:INFO:Declaring custom model
2025-08-19 20:07:25,786:INFO:Decision Tree Classifier Imported successfully
2025-08-19 20:07:25,789:INFO:Cross validation set to False
2025-08-19 20:07:25,789:INFO:Fitting Model
2025-08-19 20:07:26,319:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:07:26,319:INFO:create_model() successfully completed......................................
2025-08-19 20:07:26,471:INFO:_master_model_container: 14
2025-08-19 20:07:26,472:INFO:_display_container: 2
2025-08-19 20:07:26,472:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:07:26,472:INFO:compare_models() successfully completed......................................
2025-08-19 20:09:08,270:INFO:PyCaret ClassificationExperiment
2025-08-19 20:09:08,270:INFO:Logging name: clf-default-name
2025-08-19 20:09:08,270:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 20:09:08,270:INFO:version 3.3.2
2025-08-19 20:09:08,270:INFO:Initializing setup()
2025-08-19 20:09:08,270:INFO:self.USI: ee35
2025-08-19 20:09:08,271:INFO:self._variable_keys: {'exp_id', 'gpu_n_jobs_param', 'y_test', 'pipeline', 'y_train', 'fix_imbalance', 'data', 'X', '_available_plots', 'logging_param', 'html_param', 'exp_name_log', '_ml_usecase', 'X_test', 'target_param', 'n_jobs_param', 'log_plots_param', 'fold_groups_param', 'idx', 'gpu_param', 'is_multiclass', 'fold_generator', 'USI', 'seed', 'memory', 'X_train', 'y', 'fold_shuffle_param'}
2025-08-19 20:09:08,271:INFO:Checking environment
2025-08-19 20:09:08,271:INFO:python_version: 3.9.23
2025-08-19 20:09:08,271:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-19 20:09:08,271:INFO:machine: AMD64
2025-08-19 20:09:08,271:INFO:platform: Windows-10-10.0.26100-SP0
2025-08-19 20:09:08,276:INFO:Memory: svmem(total=17015848960, available=2299994112, percent=86.5, used=14715854848, free=2299994112)
2025-08-19 20:09:08,276:INFO:Physical Core: 6
2025-08-19 20:09:08,276:INFO:Logical Core: 12
2025-08-19 20:09:08,276:INFO:Checking libraries
2025-08-19 20:09:08,276:INFO:System:
2025-08-19 20:09:08,276:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-19 20:09:08,276:INFO:executable: D:\Programming\My_works\conda_env\auto_ml\python.exe
2025-08-19 20:09:08,276:INFO:   machine: Windows-10-10.0.26100-SP0
2025-08-19 20:09:08,276:INFO:PyCaret required dependencies:
2025-08-19 20:09:08,276:INFO:                 pip: 25.1
2025-08-19 20:09:08,277:INFO:          setuptools: 78.1.1
2025-08-19 20:09:08,277:INFO:             pycaret: 3.3.2
2025-08-19 20:09:08,277:INFO:             IPython: 8.18.1
2025-08-19 20:09:08,277:INFO:          ipywidgets: 8.1.7
2025-08-19 20:09:08,277:INFO:                tqdm: 4.67.1
2025-08-19 20:09:08,277:INFO:               numpy: 1.26.4
2025-08-19 20:09:08,277:INFO:              pandas: 2.1.4
2025-08-19 20:09:08,277:INFO:              jinja2: 3.1.6
2025-08-19 20:09:08,277:INFO:               scipy: 1.11.4
2025-08-19 20:09:08,277:INFO:              joblib: 1.3.2
2025-08-19 20:09:08,277:INFO:             sklearn: 1.4.2
2025-08-19 20:09:08,277:INFO:                pyod: 2.0.5
2025-08-19 20:09:08,277:INFO:            imblearn: 0.12.4
2025-08-19 20:09:08,277:INFO:   category_encoders: 2.6.4
2025-08-19 20:09:08,277:INFO:            lightgbm: 4.6.0
2025-08-19 20:09:08,277:INFO:               numba: 0.60.0
2025-08-19 20:09:08,277:INFO:            requests: 2.32.5
2025-08-19 20:09:08,278:INFO:          matplotlib: 3.7.5
2025-08-19 20:09:08,278:INFO:          scikitplot: 0.3.7
2025-08-19 20:09:08,278:INFO:         yellowbrick: 1.5
2025-08-19 20:09:08,278:INFO:              plotly: 5.24.1
2025-08-19 20:09:08,278:INFO:    plotly-resampler: Not installed
2025-08-19 20:09:08,278:INFO:             kaleido: 1.0.0
2025-08-19 20:09:08,278:INFO:           schemdraw: 0.15
2025-08-19 20:09:08,278:INFO:         statsmodels: 0.14.5
2025-08-19 20:09:08,278:INFO:              sktime: 0.26.0
2025-08-19 20:09:08,279:INFO:               tbats: 1.1.3
2025-08-19 20:09:08,279:INFO:            pmdarima: 2.0.4
2025-08-19 20:09:08,279:INFO:              psutil: 6.1.0
2025-08-19 20:09:08,279:INFO:          markupsafe: 3.0.2
2025-08-19 20:09:08,279:INFO:             pickle5: Not installed
2025-08-19 20:09:08,279:INFO:         cloudpickle: 3.1.1
2025-08-19 20:09:08,279:INFO:         deprecation: 2.1.0
2025-08-19 20:09:08,279:INFO:              xxhash: 3.5.0
2025-08-19 20:09:08,279:INFO:           wurlitzer: Not installed
2025-08-19 20:09:08,279:INFO:PyCaret optional dependencies:
2025-08-19 20:09:08,279:INFO:                shap: Not installed
2025-08-19 20:09:08,279:INFO:           interpret: Not installed
2025-08-19 20:09:08,279:INFO:                umap: Not installed
2025-08-19 20:09:08,279:INFO:     ydata_profiling: Not installed
2025-08-19 20:09:08,279:INFO:  explainerdashboard: Not installed
2025-08-19 20:09:08,279:INFO:             autoviz: Not installed
2025-08-19 20:09:08,279:INFO:           fairlearn: Not installed
2025-08-19 20:09:08,280:INFO:          deepchecks: Not installed
2025-08-19 20:09:08,280:INFO:             xgboost: Not installed
2025-08-19 20:09:08,280:INFO:            catboost: Not installed
2025-08-19 20:09:08,280:INFO:              kmodes: Not installed
2025-08-19 20:09:08,280:INFO:             mlxtend: Not installed
2025-08-19 20:09:08,280:INFO:       statsforecast: Not installed
2025-08-19 20:09:08,280:INFO:        tune_sklearn: Not installed
2025-08-19 20:09:08,280:INFO:                 ray: Not installed
2025-08-19 20:09:08,280:INFO:            hyperopt: Not installed
2025-08-19 20:09:08,280:INFO:              optuna: Not installed
2025-08-19 20:09:08,280:INFO:               skopt: Not installed
2025-08-19 20:09:08,280:INFO:              mlflow: Not installed
2025-08-19 20:09:08,280:INFO:              gradio: Not installed
2025-08-19 20:09:08,280:INFO:             fastapi: 0.116.1
2025-08-19 20:09:08,280:INFO:             uvicorn: 0.35.0
2025-08-19 20:09:08,280:INFO:              m2cgen: Not installed
2025-08-19 20:09:08,280:INFO:           evidently: Not installed
2025-08-19 20:09:08,280:INFO:               fugue: Not installed
2025-08-19 20:09:08,280:INFO:           streamlit: 1.48.1
2025-08-19 20:09:08,280:INFO:             prophet: Not installed
2025-08-19 20:09:08,281:INFO:None
2025-08-19 20:09:08,281:INFO:Set up data.
2025-08-19 20:09:08,318:INFO:Set up folding strategy.
2025-08-19 20:09:08,318:INFO:Set up train/test split.
2025-08-19 20:09:08,359:INFO:Set up index.
2025-08-19 20:09:08,359:INFO:Assigning column types.
2025-08-19 20:09:08,367:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 20:09:08,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 20:09:08,704:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 20:09:08,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:08,903:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 20:09:09,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:09,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:09,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:09,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:09,270:INFO:Preparing preprocessing pipeline...
2025-08-19 20:09:09,273:INFO:Set up label encoding.
2025-08-19 20:09:09,273:INFO:Set up simple imputation.
2025-08-19 20:09:09,287:INFO:Set up encoding of ordinal features.
2025-08-19 20:09:09,290:INFO:Set up encoding of categorical features.
2025-08-19 20:09:09,545:INFO:Finished creating preprocessing pipeline.
2025-08-19 20:09:09,568:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Public\Documents\ESTsoft\CreatorTemp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Year', 'Engine_Size_L',
                                             'Mileage_KM', 'Price_USD',
                                             'Sales_Volume'],
                                    transformer=SimpleImpute...
Manual       1
NaN         -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Model', 'Region', 'Color',
                                             'Fuel_Type'],
                                    transformer=OneHotEncoder(cols=['Model',
                                                                    'Region',
                                                                    'Color',
                                                                    'Fuel_Type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 20:09:09,568:INFO:Creating final display dataframe.
2025-08-19 20:09:10,183:INFO:Setup _display_container:                     Description                 Value
0                    Session id                    42
1                        Target  Sales_Classification
2                   Target type                Binary
3                Target mapping       High: 0, Low: 1
4           Original data shape           (50000, 11)
5        Transformed data shape           (50000, 34)
6   Transformed train set shape           (35000, 34)
7    Transformed test set shape           (15000, 34)
8              Numeric features                     5
9          Categorical features                     5
10                   Preprocess                  True
11              Imputation type                simple
12           Numeric imputation                  mean
13       Categorical imputation                  mode
14     Maximum one-hot encoding                    25
15              Encoding method                  None
16               Fold Generator       StratifiedKFold
17                  Fold Number                    10
18                     CPU Jobs                    -1
19                      Use GPU                 False
20               Log Experiment                 False
21              Experiment Name      clf-default-name
22                          USI                  ee35
2025-08-19 20:09:10,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:10,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:10,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:10,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-19 20:09:10,319:INFO:setup() successfully completed in 2.16s...............
2025-08-19 20:09:10,319:INFO:Initializing compare_models()
2025-08-19 20:09:10,319:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 20:09:10,319:INFO:Checking exceptions
2025-08-19 20:09:10,326:INFO:Preparing display monitor
2025-08-19 20:09:10,328:INFO:Initializing Logistic Regression
2025-08-19 20:09:10,329:INFO:Total runtime is 9.493033091227214e-06 minutes
2025-08-19 20:09:10,329:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:10,329:INFO:Initializing create_model()
2025-08-19 20:09:10,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:10,329:INFO:Checking exceptions
2025-08-19 20:09:10,329:INFO:Importing libraries
2025-08-19 20:09:10,330:INFO:Copying training dataset
2025-08-19 20:09:10,344:INFO:Defining folds
2025-08-19 20:09:10,344:INFO:Declaring metric variables
2025-08-19 20:09:10,344:INFO:Importing untrained model
2025-08-19 20:09:10,344:INFO:Logistic Regression Imported successfully
2025-08-19 20:09:10,345:INFO:Starting cross validation
2025-08-19 20:09:10,346:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:12,326:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,353:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,365:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,388:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,391:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,403:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,404:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,408:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,418:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,432:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,435:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,445:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,449:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,450:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,460:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,477:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,490:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,495:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,497:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,499:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,512:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,526:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,550:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,580:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,632:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,633:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,653:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,655:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,674:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,676:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:12,717:INFO:Calculating mean and std
2025-08-19 20:09:12,718:INFO:Creating metrics dataframe
2025-08-19 20:09:12,720:INFO:Uploading results into container
2025-08-19 20:09:12,720:INFO:Uploading model into container now
2025-08-19 20:09:12,721:INFO:_master_model_container: 1
2025-08-19 20:09:12,721:INFO:_display_container: 2
2025-08-19 20:09:12,721:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 20:09:12,721:INFO:create_model() successfully completed......................................
2025-08-19 20:09:12,805:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:12,805:INFO:Creating metrics dataframe
2025-08-19 20:09:12,807:INFO:Initializing K Neighbors Classifier
2025-08-19 20:09:12,807:INFO:Total runtime is 0.041320010026295984 minutes
2025-08-19 20:09:12,808:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:12,808:INFO:Initializing create_model()
2025-08-19 20:09:12,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:12,808:INFO:Checking exceptions
2025-08-19 20:09:12,808:INFO:Importing libraries
2025-08-19 20:09:12,809:INFO:Copying training dataset
2025-08-19 20:09:12,821:INFO:Defining folds
2025-08-19 20:09:12,821:INFO:Declaring metric variables
2025-08-19 20:09:12,821:INFO:Importing untrained model
2025-08-19 20:09:12,821:INFO:K Neighbors Classifier Imported successfully
2025-08-19 20:09:12,822:INFO:Starting cross validation
2025-08-19 20:09:12,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:17,319:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,376:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,397:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,432:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,438:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,442:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,457:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,476:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,487:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,496:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,497:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,517:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,520:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,531:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,544:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,553:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,554:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,560:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,564:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,584:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,593:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,603:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,620:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,645:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,683:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,701:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,716:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,730:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,767:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:17,805:INFO:Calculating mean and std
2025-08-19 20:09:17,807:INFO:Creating metrics dataframe
2025-08-19 20:09:17,809:INFO:Uploading results into container
2025-08-19 20:09:17,809:INFO:Uploading model into container now
2025-08-19 20:09:17,810:INFO:_master_model_container: 2
2025-08-19 20:09:17,810:INFO:_display_container: 2
2025-08-19 20:09:17,811:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 20:09:17,811:INFO:create_model() successfully completed......................................
2025-08-19 20:09:17,892:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:17,892:INFO:Creating metrics dataframe
2025-08-19 20:09:17,895:INFO:Initializing Naive Bayes
2025-08-19 20:09:17,896:INFO:Total runtime is 0.12612869739532473 minutes
2025-08-19 20:09:17,896:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:17,897:INFO:Initializing create_model()
2025-08-19 20:09:17,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:17,897:INFO:Checking exceptions
2025-08-19 20:09:17,897:INFO:Importing libraries
2025-08-19 20:09:17,897:INFO:Copying training dataset
2025-08-19 20:09:17,911:INFO:Defining folds
2025-08-19 20:09:17,911:INFO:Declaring metric variables
2025-08-19 20:09:17,911:INFO:Importing untrained model
2025-08-19 20:09:17,911:INFO:Naive Bayes Imported successfully
2025-08-19 20:09:17,911:INFO:Starting cross validation
2025-08-19 20:09:17,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:18,974:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:18,980:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:18,981:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,026:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,037:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,039:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,047:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,048:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,080:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,083:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,088:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,089:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,098:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,099:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,100:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,106:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,135:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,138:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,141:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,152:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,154:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,156:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,159:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,190:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,191:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,194:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,207:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,211:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,242:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,265:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:19,348:INFO:Calculating mean and std
2025-08-19 20:09:19,350:INFO:Creating metrics dataframe
2025-08-19 20:09:19,353:INFO:Uploading results into container
2025-08-19 20:09:19,354:INFO:Uploading model into container now
2025-08-19 20:09:19,355:INFO:_master_model_container: 3
2025-08-19 20:09:19,355:INFO:_display_container: 2
2025-08-19 20:09:19,355:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 20:09:19,355:INFO:create_model() successfully completed......................................
2025-08-19 20:09:19,465:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:19,465:INFO:Creating metrics dataframe
2025-08-19 20:09:19,470:INFO:Initializing Decision Tree Classifier
2025-08-19 20:09:19,471:INFO:Total runtime is 0.15237147410710655 minutes
2025-08-19 20:09:19,471:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:19,471:INFO:Initializing create_model()
2025-08-19 20:09:19,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:19,471:INFO:Checking exceptions
2025-08-19 20:09:19,471:INFO:Importing libraries
2025-08-19 20:09:19,471:INFO:Copying training dataset
2025-08-19 20:09:19,489:INFO:Defining folds
2025-08-19 20:09:19,490:INFO:Declaring metric variables
2025-08-19 20:09:19,490:INFO:Importing untrained model
2025-08-19 20:09:19,491:INFO:Decision Tree Classifier Imported successfully
2025-08-19 20:09:19,491:INFO:Starting cross validation
2025-08-19 20:09:19,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:20,641:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,655:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,665:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,681:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,685:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,687:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,690:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,693:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,700:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,708:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,721:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,726:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,733:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,736:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,744:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,745:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,745:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,747:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,759:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,761:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,778:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,785:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,793:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,793:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,794:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,798:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,802:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,817:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,846:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:20,902:INFO:Calculating mean and std
2025-08-19 20:09:20,904:INFO:Creating metrics dataframe
2025-08-19 20:09:20,907:INFO:Uploading results into container
2025-08-19 20:09:20,907:INFO:Uploading model into container now
2025-08-19 20:09:20,908:INFO:_master_model_container: 4
2025-08-19 20:09:20,908:INFO:_display_container: 2
2025-08-19 20:09:20,908:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:09:20,908:INFO:create_model() successfully completed......................................
2025-08-19 20:09:21,003:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:21,003:INFO:Creating metrics dataframe
2025-08-19 20:09:21,006:INFO:Initializing SVM - Linear Kernel
2025-08-19 20:09:21,006:INFO:Total runtime is 0.1779606342315674 minutes
2025-08-19 20:09:21,006:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:21,007:INFO:Initializing create_model()
2025-08-19 20:09:21,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:21,007:INFO:Checking exceptions
2025-08-19 20:09:21,007:INFO:Importing libraries
2025-08-19 20:09:21,007:INFO:Copying training dataset
2025-08-19 20:09:21,020:INFO:Defining folds
2025-08-19 20:09:21,020:INFO:Declaring metric variables
2025-08-19 20:09:21,021:INFO:Importing untrained model
2025-08-19 20:09:21,021:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 20:09:21,021:INFO:Starting cross validation
2025-08-19 20:09:21,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:22,747:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,754:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,764:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,771:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,789:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,795:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,806:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,815:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,838:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,840:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,851:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,867:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,957:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:22,987:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,002:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,022:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,028:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,034:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,054:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,064:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,090:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,174:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,188:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,208:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,221:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,247:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,247:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,259:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,304:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,326:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:23,371:INFO:Calculating mean and std
2025-08-19 20:09:23,372:INFO:Creating metrics dataframe
2025-08-19 20:09:23,375:INFO:Uploading results into container
2025-08-19 20:09:23,376:INFO:Uploading model into container now
2025-08-19 20:09:23,376:INFO:_master_model_container: 5
2025-08-19 20:09:23,377:INFO:_display_container: 2
2025-08-19 20:09:23,377:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 20:09:23,377:INFO:create_model() successfully completed......................................
2025-08-19 20:09:23,483:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:23,484:INFO:Creating metrics dataframe
2025-08-19 20:09:23,487:INFO:Initializing Ridge Classifier
2025-08-19 20:09:23,487:INFO:Total runtime is 0.2193107883135478 minutes
2025-08-19 20:09:23,487:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:23,488:INFO:Initializing create_model()
2025-08-19 20:09:23,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:23,488:INFO:Checking exceptions
2025-08-19 20:09:23,488:INFO:Importing libraries
2025-08-19 20:09:23,488:INFO:Copying training dataset
2025-08-19 20:09:23,505:INFO:Defining folds
2025-08-19 20:09:23,505:INFO:Declaring metric variables
2025-08-19 20:09:23,505:INFO:Importing untrained model
2025-08-19 20:09:23,506:INFO:Ridge Classifier Imported successfully
2025-08-19 20:09:23,506:INFO:Starting cross validation
2025-08-19 20:09:23,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:24,902:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,904:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,916:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,959:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,968:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,980:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:24,985:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,009:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,015:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,045:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,054:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,079:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,081:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,110:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,138:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,155:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,163:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,211:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,231:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,284:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,300:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,301:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,303:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,336:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,366:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,367:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,405:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,426:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,430:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,453:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:25,560:INFO:Calculating mean and std
2025-08-19 20:09:25,563:INFO:Creating metrics dataframe
2025-08-19 20:09:25,571:INFO:Uploading results into container
2025-08-19 20:09:25,573:INFO:Uploading model into container now
2025-08-19 20:09:25,575:INFO:_master_model_container: 6
2025-08-19 20:09:25,577:INFO:_display_container: 2
2025-08-19 20:09:25,584:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-19 20:09:25,584:INFO:create_model() successfully completed......................................
2025-08-19 20:09:25,764:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:25,764:INFO:Creating metrics dataframe
2025-08-19 20:09:25,769:INFO:Initializing Random Forest Classifier
2025-08-19 20:09:25,770:INFO:Total runtime is 0.2573622822761536 minutes
2025-08-19 20:09:25,770:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:25,771:INFO:Initializing create_model()
2025-08-19 20:09:25,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:25,771:INFO:Checking exceptions
2025-08-19 20:09:25,771:INFO:Importing libraries
2025-08-19 20:09:25,771:INFO:Copying training dataset
2025-08-19 20:09:25,798:INFO:Defining folds
2025-08-19 20:09:25,798:INFO:Declaring metric variables
2025-08-19 20:09:25,799:INFO:Importing untrained model
2025-08-19 20:09:25,801:INFO:Random Forest Classifier Imported successfully
2025-08-19 20:09:25,801:INFO:Starting cross validation
2025-08-19 20:09:25,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:30,402:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,410:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,446:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,448:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,448:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,491:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,497:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,503:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,506:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,514:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,516:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,517:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,520:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,520:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,551:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,553:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,555:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,564:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,571:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,574:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,576:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,576:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,576:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,600:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,610:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,619:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,626:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,631:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,641:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,683:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:30,736:INFO:Calculating mean and std
2025-08-19 20:09:30,737:INFO:Creating metrics dataframe
2025-08-19 20:09:30,739:INFO:Uploading results into container
2025-08-19 20:09:30,740:INFO:Uploading model into container now
2025-08-19 20:09:30,740:INFO:_master_model_container: 7
2025-08-19 20:09:30,740:INFO:_display_container: 2
2025-08-19 20:09:30,741:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-19 20:09:30,741:INFO:create_model() successfully completed......................................
2025-08-19 20:09:30,825:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:30,825:INFO:Creating metrics dataframe
2025-08-19 20:09:30,829:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 20:09:30,829:INFO:Total runtime is 0.341671895980835 minutes
2025-08-19 20:09:30,829:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:30,829:INFO:Initializing create_model()
2025-08-19 20:09:30,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:30,829:INFO:Checking exceptions
2025-08-19 20:09:30,829:INFO:Importing libraries
2025-08-19 20:09:30,829:INFO:Copying training dataset
2025-08-19 20:09:30,842:INFO:Defining folds
2025-08-19 20:09:30,843:INFO:Declaring metric variables
2025-08-19 20:09:30,843:INFO:Importing untrained model
2025-08-19 20:09:30,843:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 20:09:30,843:INFO:Starting cross validation
2025-08-19 20:09:30,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:31,603:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,652:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,683:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,710:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,720:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,738:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,759:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,773:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,845:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:31,851:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 20:09:32,123:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,134:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,148:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,164:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,165:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,170:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,170:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,178:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,183:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,186:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,190:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,201:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,203:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,205:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,205:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,206:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,208:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,215:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,219:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,228:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,234:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,244:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,246:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,250:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,250:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,252:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,265:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,279:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,282:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,288:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:32,334:INFO:Calculating mean and std
2025-08-19 20:09:32,335:INFO:Creating metrics dataframe
2025-08-19 20:09:32,338:INFO:Uploading results into container
2025-08-19 20:09:32,339:INFO:Uploading model into container now
2025-08-19 20:09:32,339:INFO:_master_model_container: 8
2025-08-19 20:09:32,339:INFO:_display_container: 2
2025-08-19 20:09:32,340:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 20:09:32,340:INFO:create_model() successfully completed......................................
2025-08-19 20:09:32,422:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:32,422:INFO:Creating metrics dataframe
2025-08-19 20:09:32,425:INFO:Initializing Ada Boost Classifier
2025-08-19 20:09:32,426:INFO:Total runtime is 0.36829289992650355 minutes
2025-08-19 20:09:32,426:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:32,426:INFO:Initializing create_model()
2025-08-19 20:09:32,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:32,426:INFO:Checking exceptions
2025-08-19 20:09:32,426:INFO:Importing libraries
2025-08-19 20:09:32,426:INFO:Copying training dataset
2025-08-19 20:09:32,441:INFO:Defining folds
2025-08-19 20:09:32,441:INFO:Declaring metric variables
2025-08-19 20:09:32,441:INFO:Importing untrained model
2025-08-19 20:09:32,441:INFO:Ada Boost Classifier Imported successfully
2025-08-19 20:09:32,441:INFO:Starting cross validation
2025-08-19 20:09:32,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:33,118:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,145:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,176:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,191:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,217:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,218:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,238:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,245:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,252:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,263:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 20:09:33,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,370:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,396:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,400:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,414:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,450:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,508:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,510:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,514:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,517:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,517:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,569:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,572:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,573:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,573:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,574:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,574:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:33,654:INFO:Calculating mean and std
2025-08-19 20:09:33,654:INFO:Creating metrics dataframe
2025-08-19 20:09:33,657:INFO:Uploading results into container
2025-08-19 20:09:33,658:INFO:Uploading model into container now
2025-08-19 20:09:33,659:INFO:_master_model_container: 9
2025-08-19 20:09:33,659:INFO:_display_container: 2
2025-08-19 20:09:33,659:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-19 20:09:33,659:INFO:create_model() successfully completed......................................
2025-08-19 20:09:33,762:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:33,762:INFO:Creating metrics dataframe
2025-08-19 20:09:33,765:INFO:Initializing Gradient Boosting Classifier
2025-08-19 20:09:33,765:INFO:Total runtime is 0.390618371963501 minutes
2025-08-19 20:09:33,765:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:33,766:INFO:Initializing create_model()
2025-08-19 20:09:33,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:33,766:INFO:Checking exceptions
2025-08-19 20:09:33,766:INFO:Importing libraries
2025-08-19 20:09:33,766:INFO:Copying training dataset
2025-08-19 20:09:33,781:INFO:Defining folds
2025-08-19 20:09:33,781:INFO:Declaring metric variables
2025-08-19 20:09:33,781:INFO:Importing untrained model
2025-08-19 20:09:33,781:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 20:09:33,782:INFO:Starting cross validation
2025-08-19 20:09:33,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:40,036:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,042:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,063:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,069:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,076:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,092:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,100:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,101:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,110:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,121:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,132:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,134:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,136:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,148:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,148:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,155:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,165:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,167:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,183:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,185:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,192:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,199:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,199:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,211:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,224:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,229:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,244:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,262:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,271:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,294:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:40,359:INFO:Calculating mean and std
2025-08-19 20:09:40,359:INFO:Creating metrics dataframe
2025-08-19 20:09:40,362:INFO:Uploading results into container
2025-08-19 20:09:40,363:INFO:Uploading model into container now
2025-08-19 20:09:40,363:INFO:_master_model_container: 10
2025-08-19 20:09:40,364:INFO:_display_container: 2
2025-08-19 20:09:40,364:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 20:09:40,364:INFO:create_model() successfully completed......................................
2025-08-19 20:09:40,456:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:40,456:INFO:Creating metrics dataframe
2025-08-19 20:09:40,459:INFO:Initializing Linear Discriminant Analysis
2025-08-19 20:09:40,459:INFO:Total runtime is 0.5021824399630229 minutes
2025-08-19 20:09:40,459:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:40,460:INFO:Initializing create_model()
2025-08-19 20:09:40,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:40,460:INFO:Checking exceptions
2025-08-19 20:09:40,460:INFO:Importing libraries
2025-08-19 20:09:40,460:INFO:Copying training dataset
2025-08-19 20:09:40,474:INFO:Defining folds
2025-08-19 20:09:40,475:INFO:Declaring metric variables
2025-08-19 20:09:40,475:INFO:Importing untrained model
2025-08-19 20:09:40,475:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 20:09:40,475:INFO:Starting cross validation
2025-08-19 20:09:40,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:41,953:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:41,971:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:41,979:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:41,996:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,002:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,011:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,014:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,018:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,019:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,025:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,029:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,039:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,043:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,051:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,060:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,061:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,070:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,077:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,079:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,086:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,094:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,097:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,105:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,106:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,120:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,132:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,136:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,137:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,159:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:42,227:INFO:Calculating mean and std
2025-08-19 20:09:42,228:INFO:Creating metrics dataframe
2025-08-19 20:09:42,230:INFO:Uploading results into container
2025-08-19 20:09:42,231:INFO:Uploading model into container now
2025-08-19 20:09:42,231:INFO:_master_model_container: 11
2025-08-19 20:09:42,231:INFO:_display_container: 2
2025-08-19 20:09:42,231:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 20:09:42,231:INFO:create_model() successfully completed......................................
2025-08-19 20:09:42,341:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:42,341:INFO:Creating metrics dataframe
2025-08-19 20:09:42,344:INFO:Initializing Extra Trees Classifier
2025-08-19 20:09:42,344:INFO:Total runtime is 0.5335960785547893 minutes
2025-08-19 20:09:42,344:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:42,345:INFO:Initializing create_model()
2025-08-19 20:09:42,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:42,345:INFO:Checking exceptions
2025-08-19 20:09:42,345:INFO:Importing libraries
2025-08-19 20:09:42,345:INFO:Copying training dataset
2025-08-19 20:09:42,360:INFO:Defining folds
2025-08-19 20:09:42,360:INFO:Declaring metric variables
2025-08-19 20:09:42,360:INFO:Importing untrained model
2025-08-19 20:09:42,361:INFO:Extra Trees Classifier Imported successfully
2025-08-19 20:09:42,362:INFO:Starting cross validation
2025-08-19 20:09:42,365:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:48,988:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:48,988:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,004:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,072:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,086:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,089:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,097:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,148:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,152:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,153:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,162:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,187:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,189:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,210:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,220:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,236:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,250:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,273:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,293:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,293:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,320:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,333:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,354:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,358:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,379:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,397:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,427:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:49,475:INFO:Calculating mean and std
2025-08-19 20:09:49,476:INFO:Creating metrics dataframe
2025-08-19 20:09:49,480:INFO:Uploading results into container
2025-08-19 20:09:49,481:INFO:Uploading model into container now
2025-08-19 20:09:49,481:INFO:_master_model_container: 12
2025-08-19 20:09:49,481:INFO:_display_container: 2
2025-08-19 20:09:49,482:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-19 20:09:49,482:INFO:create_model() successfully completed......................................
2025-08-19 20:09:49,576:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:49,576:INFO:Creating metrics dataframe
2025-08-19 20:09:49,578:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 20:09:49,578:INFO:Total runtime is 0.654168995221456 minutes
2025-08-19 20:09:49,579:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:49,579:INFO:Initializing create_model()
2025-08-19 20:09:49,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:49,579:INFO:Checking exceptions
2025-08-19 20:09:49,580:INFO:Importing libraries
2025-08-19 20:09:49,580:INFO:Copying training dataset
2025-08-19 20:09:49,593:INFO:Defining folds
2025-08-19 20:09:49,594:INFO:Declaring metric variables
2025-08-19 20:09:49,594:INFO:Importing untrained model
2025-08-19 20:09:49,595:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 20:09:49,595:INFO:Starting cross validation
2025-08-19 20:09:49,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:51,790:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:51,805:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:51,848:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:51,860:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:51,905:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:51,918:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,202:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,259:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,287:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,318:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,345:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,374:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,409:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,436:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,458:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,492:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,518:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,555:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,577:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,610:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,673:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,694:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,746:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,802:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,832:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,835:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,886:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,890:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,922:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,923:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:52,975:INFO:Calculating mean and std
2025-08-19 20:09:52,976:INFO:Creating metrics dataframe
2025-08-19 20:09:52,979:INFO:Uploading results into container
2025-08-19 20:09:52,979:INFO:Uploading model into container now
2025-08-19 20:09:52,979:INFO:_master_model_container: 13
2025-08-19 20:09:52,979:INFO:_display_container: 2
2025-08-19 20:09:52,981:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 20:09:52,981:INFO:create_model() successfully completed......................................
2025-08-19 20:09:53,075:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:53,075:INFO:Creating metrics dataframe
2025-08-19 20:09:53,077:INFO:Initializing Dummy Classifier
2025-08-19 20:09:53,077:INFO:Total runtime is 0.7124810735384625 minutes
2025-08-19 20:09:53,078:INFO:SubProcess create_model() called ==================================
2025-08-19 20:09:53,078:INFO:Initializing create_model()
2025-08-19 20:09:53,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029EA0A8DB20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:53,078:INFO:Checking exceptions
2025-08-19 20:09:53,078:INFO:Importing libraries
2025-08-19 20:09:53,078:INFO:Copying training dataset
2025-08-19 20:09:53,091:INFO:Defining folds
2025-08-19 20:09:53,091:INFO:Declaring metric variables
2025-08-19 20:09:53,091:INFO:Importing untrained model
2025-08-19 20:09:53,091:INFO:Dummy Classifier Imported successfully
2025-08-19 20:09:53,091:INFO:Starting cross validation
2025-08-19 20:09:53,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 20:09:53,985:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:53,988:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,001:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,013:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,021:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,036:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,037:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,038:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,044:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,045:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,052:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,065:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,067:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,068:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,070:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,076:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,082:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,089:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,092:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,092:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,095:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,098:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,098:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,102:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,105:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,117:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,119:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,122:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,125:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,127:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,128:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,128:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,146:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,150:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,150:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,150:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,161:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 20:09:54,170:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,184:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-19 20:09:54,254:INFO:Calculating mean and std
2025-08-19 20:09:54,256:INFO:Creating metrics dataframe
2025-08-19 20:09:54,259:INFO:Uploading results into container
2025-08-19 20:09:54,260:INFO:Uploading model into container now
2025-08-19 20:09:54,261:INFO:_master_model_container: 14
2025-08-19 20:09:54,261:INFO:_display_container: 2
2025-08-19 20:09:54,261:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-19 20:09:54,261:INFO:create_model() successfully completed......................................
2025-08-19 20:09:54,347:INFO:SubProcess create_model() end ==================================
2025-08-19 20:09:54,347:INFO:Creating metrics dataframe
2025-08-19 20:09:54,350:WARNING:D:\Programming\My_works\conda_env\auto_ml\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 20:09:54,351:INFO:Initializing create_model()
2025-08-19 20:09:54,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029EA0513760>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 20:09:54,352:INFO:Checking exceptions
2025-08-19 20:09:54,352:INFO:Importing libraries
2025-08-19 20:09:54,352:INFO:Copying training dataset
2025-08-19 20:09:54,366:INFO:Defining folds
2025-08-19 20:09:54,367:INFO:Declaring metric variables
2025-08-19 20:09:54,367:INFO:Importing untrained model
2025-08-19 20:09:54,367:INFO:Declaring custom model
2025-08-19 20:09:54,367:INFO:Decision Tree Classifier Imported successfully
2025-08-19 20:09:54,369:INFO:Cross validation set to False
2025-08-19 20:09:54,369:INFO:Fitting Model
2025-08-19 20:09:54,689:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:09:54,689:INFO:create_model() successfully completed......................................
2025-08-19 20:09:54,783:INFO:_master_model_container: 14
2025-08-19 20:09:54,783:INFO:_display_container: 2
2025-08-19 20:09:54,784:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-19 20:09:54,784:INFO:compare_models() successfully completed......................................
